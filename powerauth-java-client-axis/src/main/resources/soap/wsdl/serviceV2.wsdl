<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  ~ PowerAuth Server and related software components
  ~ Copyright (C) 2018 Wultra s.r.o.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as published
  ~ by the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:tns="http://getlime.io/security/powerauth/v2"
                  targetNamespace="http://getlime.io/security/powerauth/v2">
    <wsdl:types>
        <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://getlime.io/security/powerauth/v2" version="1.0">

            <!-- Exchange public keys //-->

            <xs:element name="PrepareActivationRequest">
                <xs:annotation>
                    <xs:documentation>Request for client-server key exchange procedure.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="activationIdShort" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="activationName" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="extras" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="activationNonce" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="ephemeralPublicKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="encryptedDevicePublicKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="applicationKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="applicationSignature" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <xs:element name="PrepareActivationResponse">
                <xs:annotation>
                    <xs:documentation>Response for client-server key exchange procedure.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="activationId" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="activationNonce" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="ephemeralPublicKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="encryptedServerPublicKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="encryptedServerPublicKeySignature" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <!-- Create new activation directly //-->

            <xs:element name="CreateActivationRequest">
                <xs:annotation>
                    <xs:documentation>Request for creating a new activation directly.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="userId" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="applicationId" type="xs:long"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="timestampActivationExpire" type="xs:dateTime"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="maxFailureCount" type="xs:long"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="identity" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="activationOtp" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="activationName" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="extras" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="activationNonce" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="ephemeralPublicKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="encryptedDevicePublicKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="applicationKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="applicationSignature" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <xs:element name="CreateActivationResponse">
                <xs:annotation>
                    <xs:documentation>Response for creating a new activation directly.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="activationId" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="activationNonce" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="ephemeralPublicKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="encryptedServerPublicKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="encryptedServerPublicKeySignature" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <!-- Vault Unlock //-->

            <xs:element name="VaultUnlockRequest">
                <xs:annotation>
                    <xs:documentation>Request for the vault unlock procedure.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="activationId" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="applicationKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="data" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="signature" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="signatureType" type="tns:SignatureType"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="reason" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <xs:element name="VaultUnlockResponse">
                <xs:annotation>
                    <xs:documentation>Response for the vault unlock procedure.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="activationId" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="userId" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="activationStatus" type="tns:ActivationStatus"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="blockedReason" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="remainingAttempts" type="xs:integer"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="signatureValid" type="xs:boolean"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="encryptedVaultEncryptionKey" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <!-- Non-personalized End-to-End Encryption Support //-->

            <xs:element name="GetNonPersonalizedEncryptionKeyRequest">
                <xs:annotation>
                    <xs:documentation>Request for obtaining a derived end-to-end encryption key for non-personalized encryption.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="applicationKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="sessionIndex" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="ephemeralPublicKey" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <xs:element name="GetNonPersonalizedEncryptionKeyResponse">
                <xs:annotation>
                    <xs:documentation>Response for obtaining a derived end-to-end encryption key for non-personalized encryption.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="applicationKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="applicationId" type="xs:long"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="encryptionKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="encryptionKeyIndex" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="ephemeralPublicKey" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <!-- End-to-End Encryption Support //-->

            <xs:element name="GetPersonalizedEncryptionKeyRequest">
                <xs:annotation>
                    <xs:documentation>Request for obtaining a derived personalized end-to-end encryption key.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="activationId" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="sessionIndex" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <xs:element name="GetPersonalizedEncryptionKeyResponse">
                <xs:annotation>
                    <xs:documentation>Response for obtaining a derived personalized end-to-end encryption key.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="activationId" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="encryptionKey" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="encryptionKeyIndex" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <!-- Token Based Authentication Support //-->

            <xs:element name="CreateTokenRequest">
                <xs:annotation>
                    <xs:documentation>Request for obtaining a new token for simple authentication.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="activationId" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="signatureType" type="tns:SignatureType"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="ephemeralPublicKey" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <xs:element name="CreateTokenResponse">
                <xs:annotation>
                    <xs:documentation>Request for obtaining a new token for simple authentication.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="encryptedData" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="mac" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <!-- PowerAuth 2.0 Enumerations //-->

            <xs:simpleType name="ActivationStatus">
                <xs:annotation>
                    <xs:documentation>Enum representing the possible activation states (CREATED, OTP_USED, ACTIVE, BLOCKED, REMOVED).</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="CREATED"/>
                    <xs:enumeration value="OTP_USED"/>
                    <xs:enumeration value="ACTIVE"/>
                    <xs:enumeration value="BLOCKED"/>
                    <xs:enumeration value="REMOVED"/>
                </xs:restriction>
            </xs:simpleType>

            <xs:simpleType name="SignatureType">
                <xs:annotation>
                    <xs:documentation>Enum representing the possible signatures types by the authentication factors used.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="POSSESSION"/>
                    <xs:enumeration value="KNOWLEDGE"/>
                    <xs:enumeration value="BIOMETRY"/>
                    <xs:enumeration value="POSSESSION_KNOWLEDGE"/>
                    <xs:enumeration value="POSSESSION_BIOMETRY"/>
                    <xs:enumeration value="POSSESSION_KNOWLEDGE_BIOMETRY"/>
                </xs:restriction>
            </xs:simpleType>

            <xs:complexType name="KeyValueMap">
                <xs:sequence>
                    <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="key" type="xs:string"/>
                                <xs:element name="value" type="xs:string"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>

        </xs:schema>
    </wsdl:types>
    <wsdl:message name="PrepareActivationRequest">
        <wsdl:part element="tns:PrepareActivationRequest" name="PrepareActivationRequest">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="PrepareActivationResponse">
        <wsdl:part element="tns:PrepareActivationResponse" name="PrepareActivationResponse">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="CreateActivationRequest">
        <wsdl:part element="tns:CreateActivationRequest" name="CreateActivationRequest">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="CreateActivationResponse">
        <wsdl:part element="tns:CreateActivationResponse" name="CreateActivationResponse">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="VaultUnlockResponse">
        <wsdl:part element="tns:VaultUnlockResponse" name="VaultUnlockResponse">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="VaultUnlockRequest">
        <wsdl:part element="tns:VaultUnlockRequest" name="VaultUnlockRequest">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetNonPersonalizedEncryptionKeyRequest">
        <wsdl:part element="tns:GetNonPersonalizedEncryptionKeyRequest" name="GetNonPersonalizedEncryptionKeyRequest">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetNonPersonalizedEncryptionKeyResponse">
        <wsdl:part element="tns:GetNonPersonalizedEncryptionKeyResponse" name="GetNonPersonalizedEncryptionKeyResponse">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetPersonalizedEncryptionKeyResponse">
        <wsdl:part element="tns:GetPersonalizedEncryptionKeyResponse" name="GetPersonalizedEncryptionKeyResponse">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="GetPersonalizedEncryptionKeyRequest">
        <wsdl:part element="tns:GetPersonalizedEncryptionKeyRequest" name="GetPersonalizedEncryptionKeyRequest">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="CreateTokenRequest">
        <wsdl:part element="tns:CreateTokenRequest" name="CreateTokenRequest">
        </wsdl:part>
    </wsdl:message>
    <wsdl:message name="CreateTokenResponse">
        <wsdl:part element="tns:CreateTokenResponse" name="CreateTokenResponse">
        </wsdl:part>
    </wsdl:message>
    <wsdl:portType name="PowerAuthPortV2">
        <wsdl:operation name="PrepareActivation">
            <wsdl:input message="tns:PrepareActivationRequest" name="PrepareActivationRequest">
            </wsdl:input>
            <wsdl:output message="tns:PrepareActivationResponse" name="PrepareActivationResponse">
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="CreateActivation">
            <wsdl:input message="tns:CreateActivationRequest" name="CreateActivationRequest">
            </wsdl:input>
            <wsdl:output message="tns:CreateActivationResponse" name="CreateActivationResponse">
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="VaultUnlock">
            <wsdl:input message="tns:VaultUnlockRequest" name="VaultUnlockRequest">
            </wsdl:input>
            <wsdl:output message="tns:VaultUnlockResponse" name="VaultUnlockResponse">
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetNonPersonalizedEncryptionKey">
            <wsdl:input message="tns:GetNonPersonalizedEncryptionKeyRequest" name="GetNonPersonalizedEncryptionKeyRequest">
            </wsdl:input>
            <wsdl:output message="tns:GetNonPersonalizedEncryptionKeyResponse" name="GetNonPersonalizedEncryptionKeyResponse">
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetPersonalizedEncryptionKey">
            <wsdl:input message="tns:GetPersonalizedEncryptionKeyRequest" name="GetPersonalizedEncryptionKeyRequest">
            </wsdl:input>
            <wsdl:output message="tns:GetPersonalizedEncryptionKeyResponse" name="GetPersonalizedEncryptionKeyResponse">
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="CreateToken">
            <wsdl:input message="tns:CreateTokenRequest" name="CreateTokenRequest">
            </wsdl:input>
            <wsdl:output message="tns:CreateTokenResponse" name="CreateTokenResponse">
            </wsdl:output>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="PowerAuthPortV2Soap11" type="tns:PowerAuthPortV2">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="PrepareActivation">
            <soap:operation soapAction=""/>
            <wsdl:input name="PrepareActivationRequest">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="PrepareActivationResponse">
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="CreateActivation">
            <soap:operation soapAction=""/>
            <wsdl:input name="CreateActivationRequest">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="CreateActivationResponse">
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetNonPersonalizedEncryptionKey">
            <soap:operation soapAction=""/>
            <wsdl:input name="GetNonPersonalizedEncryptionKeyRequest">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="GetNonPersonalizedEncryptionKeyResponse">
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="GetPersonalizedEncryptionKey">
            <soap:operation soapAction=""/>
            <wsdl:input name="GetPersonalizedEncryptionKeyRequest">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="GetPersonalizedEncryptionKeyResponse">
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="VaultUnlock">
            <soap:operation soapAction=""/>
            <wsdl:input name="VaultUnlockRequest">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="VaultUnlockResponse">
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="CreateToken">
            <soap:operation soapAction=""/>
            <wsdl:input name="CreateTokenRequest">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="CreateTokenResponse">
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="PowerAuthPortV2Service">
        <wsdl:port binding="tns:PowerAuthPortV2Soap11" name="PowerAuthPortV2Soap11">
            <soap:address location="http://localhost:8080/powerauth-java-server/soap"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>